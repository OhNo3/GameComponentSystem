/*=============================================================================
/*-----------------------------------------------------------------------------
/*	[GameProcessManager.cpp] ゲーム実行の内部処理モジュール
/*	Author：Kousuke,Ohno.
/*-----------------------------------------------------------------------------
/*	説明：ゲーム実行の内部処理を定義
=============================================================================*/

/*--- インクルードファイル ---*/
#include "StdAfx.h"
#include "GameProcessManager.h"
#include "GameObjectManager.h"

//静的変数宣言
GameObjectManager* GameProcessManager::game_object_manager_ = nullptr;

/*-----------------------------------------------------------------------------
/* コンストラクタ
-----------------------------------------------------------------------------*/
GameProcessManager::GameProcessManager(void)
{
}

/*-----------------------------------------------------------------------------
/* デストラクタ
-----------------------------------------------------------------------------*/
GameProcessManager::~GameProcessManager(void)
{
}

/*-----------------------------------------------------------------------------
/* 初期化処理
-----------------------------------------------------------------------------*/
void GameProcessManager::Init(void)
{
	std::cout << "//////////初期化処理の始まり//////////\n";
	{ 
		game_object_manager_ = game_object_manager_->Create();
		game_object_manager_->InitAll();
	}
	std::cout << "/*********初期化処理の終わり*********/\n";
	std::cout << "\n";
}

/*-----------------------------------------------------------------------------
/* 終了化処理
-----------------------------------------------------------------------------*/
void GameProcessManager::Uninit(void)
{
	std::cout << "//////////終了化処理の始まり//////////\n";
	{
		game_object_manager_->UninitAll();
	}
	std::cout << "/*********終了化処理の終わり*********/\n";
	std::cout << "\n";
}

/*-----------------------------------------------------------------------------
/* 入力処理
-----------------------------------------------------------------------------*/
void GameProcessManager::ProcessInput(void)
{
	std::cout << "//////////入力処理の始まり//////////\n";
	{
		game_object_manager_->ProcessInputAll();
	}
	std::cout << "/*********入力処理の終わり*********/\n";
	std::cout << "\n";
}

/*-----------------------------------------------------------------------------
/* 更新処理
-----------------------------------------------------------------------------*/
void GameProcessManager::Update(float deltaTime)
{
	std::cout << "//////////更新処理の始まり//////////\n";
	{
		game_object_manager_->UpdateAll(deltaTime);
	}
	std::cout << "/*********更新処理の終わり*********/\n";
	std::cout << "\n";
}

/*-----------------------------------------------------------------------------
/* 出力生成処理
-----------------------------------------------------------------------------*/
void GameProcessManager::GenerateOutput(void)
{
	std::cout << "//////////出力生成処理の始まり//////////\n";
	{
		game_object_manager_->GenerateOutputAll();
	}
	std::cout << "/*********出力生成処理の終わり*********/\n";
	std::cout << "\n";
}

/*=============================================================================
/*		End of File
=============================================================================*/